import { createClient } from '@supabase/supabase-js'

// Configuration Supabase centralis√©e - Utilisation des variables d'environnement
// C√¥t√© serveur: utiliser process.env uniquement
// C√¥t√© client: import.meta.env sera disponible via Vite
const supabaseUrl = typeof import.meta !== 'undefined' && import.meta.env 
  ? import.meta.env.VITE_SUPABASE_URL 
  : process.env.VITE_SUPABASE_URL
const supabaseAnonKey = typeof import.meta !== 'undefined' && import.meta.env 
  ? import.meta.env.VITE_SUPABASE_ANON_KEY 
  : process.env.VITE_SUPABASE_ANON_KEY

// SUPABASE_SERVICE_KEY n'est disponible que c√¥t√© serveur (s√©curis√©)
const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY

// V√©rification que les variables d'environnement sont d√©finies
if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes:')
  console.error('VITE_SUPABASE_URL:', !!supabaseUrl, supabaseUrl ? '(d√©finie)' : '(manquante)')
  console.error('VITE_SUPABASE_ANON_KEY:', !!supabaseAnonKey, supabaseAnonKey ? '(d√©finie)' : '(manquante)')
  console.error('')
  console.error('üîß CONFIGURATION REQUISE SUR RENDER:')
  console.error('1. Allez dans votre service Render ‚Üí Environment')
  console.error('2. Ajoutez ces variables:')
  console.error('   - VITE_SUPABASE_URL=https://ktfdrwpvofxuktnunukv.supabase.co')
  console.error('   - VITE_SUPABASE_ANON_KEY=votre_cl√©_anon_supabase')
  console.error('   - SUPABASE_SERVICE_KEY=votre_cl√©_service_supabase')
  console.error('3. Red√©ployez le service')
  console.error('')
  throw new Error('Configuration Supabase incompl√®te - Variables d\'environnement manquantes sur Render')
}

// Note: SUPABASE_SERVICE_KEY n'est pas disponible c√¥t√© client (c'est normal et s√©curis√©)

// Client Supabase principal (pour le frontend avec auth)
export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  }
})

// Client Supabase admin (pour les op√©rations serveur)
export const supabaseAdmin = supabaseServiceKey ? createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
}) : null

// Export des configurations pour compatibilit√©
export { supabaseUrl, supabaseAnonKey, supabaseServiceKey }
