name: 🧪 Test de Déploiement

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environnement de test'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      skip_tests:
        description: 'Passer les tests'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  test-deployment:
    name: 🧪 Test Déploiement ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Installer les dépendances
        run: npm ci

      - name: 🧪 Exécuter les tests
        if: ${{ !github.event.inputs.skip_tests }}
        run: |
          echo "🧪 Exécution des tests..."
          # Ajouter vos tests ici quand ils seront disponibles
          echo "✅ Tests simulés réussis"

      - name: 🔍 Audit de sécurité
        run: |
          echo "🔍 Audit de sécurité..."
          npm audit --audit-level=moderate || true

      - name: 🏗️ Build de l'application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: 📁 Créer l'archive de test
        run: |
          tar -czf test-deploy.tar.gz \
            dist/ \
            server.js \
            package.json \
            package-lock.json \
            ecosystem.config.js \
            src/ \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=.github

      - name: 🔐 Créer le fichier .env de test
        run: |
          cat > .env << EOF
          # Configuration Supabase
          VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}
          
          # Configuration du serveur
          PORT=${{ github.event.inputs.environment == 'production' && '3001' || '3002' }}
          NODE_ENV=${{ github.event.inputs.environment }}
          
          # Configuration de sécurité
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          ADMIN_TOKEN_SECRET=${{ secrets.ADMIN_TOKEN_SECRET }}
          
          # Configuration de base de données
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          
          # Configuration de monitoring
          SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          LOG_LEVEL=${{ secrets.LOG_LEVEL || 'info' }}
          EOF

      - name: 📤 Upload de l'archive de test
        uses: actions/upload-artifact@v4
        with:
          name: test-deployment-${{ github.event.inputs.environment }}
          path: test-deploy.tar.gz
          retention-days: 7

      - name: 📋 Résumé du test
        run: |
          echo "## 🧪 Résumé du Test de Déploiement" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Informations" >> $GITHUB_STEP_SUMMARY
          echo "- **Environnement:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests:** ${{ github.event.inputs.skip_tests && 'Passés' || 'Exécutés' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 Fichiers générés" >> $GITHUB_STEP_SUMMARY
          echo "- Archive de déploiement: \`test-deploy.tar.gz\`" >> $GITHUB_STEP_SUMMARY
          echo "- Configuration: \`.env\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Prochaines étapes" >> $GITHUB_STEP_SUMMARY
          echo "1. Télécharger l'archive depuis les artifacts" >> $GITHUB_STEP_SUMMARY
          echo "2. Tester le déploiement manuel" >> $GITHUB_STEP_SUMMARY
          echo "3. Vérifier la configuration" >> $GITHUB_STEP_SUMMARY
          echo "4. Déclencher le déploiement automatique si tout est OK" >> $GITHUB_STEP_SUMMARY

  validate-config:
    name: 🔍 Validation Configuration
    runs-on: ubuntu-latest
    needs: test-deployment
    
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4

      - name: 🔍 Vérifier les secrets requis
        run: |
          echo "🔍 Vérification des secrets GitHub..."
          
          # Liste des secrets requis
          REQUIRED_SECRETS=(
            "VITE_SUPABASE_URL"
            "VITE_SUPABASE_ANON_KEY"
            "SUPABASE_SERVICE_KEY"
            "JWT_SECRET"
            "ADMIN_TOKEN_SECRET"
            "DEPLOY_HOST"
            "DEPLOY_USER"
            "DEPLOY_SSH_KEY"
            "DEPLOY_PATH"
          )
          
          echo "## 🔍 Validation des Secrets" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Secret | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          
          for secret in "${REQUIRED_SECRETS[@]}"; do
            if [ -n "${!secret}" ]; then
              echo "| $secret | ✅ Configuré |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $secret | ❌ Manquant |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Instructions" >> $GITHUB_STEP_SUMMARY
          echo "1. Allez sur **Settings** → **Secrets and variables** → **Actions**" >> $GITHUB_STEP_SUMMARY
          echo "2. Ajoutez les secrets manquants" >> $GITHUB_STEP_SUMMARY
          echo "3. Consultez \`SECRETS_SETUP.md\` pour plus de détails" >> $GITHUB_STEP_SUMMARY

      - name: 📋 Validation des fichiers
        run: |
          echo "📋 Vérification des fichiers de configuration..."
          
          echo "## 📁 Validation des Fichiers" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Vérifier les fichiers requis
          FILES=(
            ".github/workflows/deploy.yml"
            ".github/workflows/security.yml"
            "ecosystem.config.js"
            "scripts/deploy.sh"
            "scripts/generate-secrets.sh"
            "SECRETS_SETUP.md"
            "DEPLOYMENT_GUIDE.md"
          )
          
          echo "| Fichier | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
          
          for file in "${FILES[@]}"; do
            if [ -f "$file" ]; then
              echo "| $file | ✅ Présent |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $file | ❌ Manquant |" >> $GITHUB_STEP_SUMMARY
            fi
          done

  notify-completion:
    name: 📢 Notification de Fin
    runs-on: ubuntu-latest
    needs: [test-deployment, validate-config]
    if: always()
    
    steps:
      - name: 📢 Notification Slack (optionnel)
        if: ${{ secrets.SLACK_WEBHOOK_URL }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          text: |
            🧪 Test de Déploiement Terminé
            Environnement: ${{ github.event.inputs.environment }}
            Status: ${{ job.status }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: 📋 Résumé Final
        run: |
          echo "## 🎉 Test de Déploiement Terminé" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Résultats" >> $GITHUB_STEP_SUMMARY
          echo "- **Environnement:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests:** ${{ github.event.inputs.skip_tests && 'Passés' || 'Exécutés' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Prochaines Actions" >> $GITHUB_STEP_SUMMARY
          echo "1. Vérifier les artifacts générés" >> $GITHUB_STEP_SUMMARY
          echo "2. Configurer les secrets manquants si nécessaire" >> $GITHUB_STEP_SUMMARY
          echo "3. Déclencher le déploiement automatique" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📚 Documentation" >> $GITHUB_STEP_SUMMARY
          echo "- [Guide de Déploiement](DEPLOYMENT_GUIDE.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [Configuration des Secrets](SECRETS_SETUP.md)" >> $GITHUB_STEP_SUMMARY
